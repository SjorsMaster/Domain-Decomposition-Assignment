@startuml

title Domain Decomposition Assignment
skinparam componentStyle uml2

'CLASSES
class Cappy {
  .. Fields ..
- FlightSpeed: float
- HasBounce: bool
~ Direction: Vector3
~ Force: Vector3
  .. Methods ..
-Update(): void {}
-Throw(): void { Vector3 direction, Vector3 force }
}
class Mario {
  .. Fields ..
- JumpForce: float
- WalkSpeed: float
  .. Methods ..
-Update(): void { }
-Jump(): void { }
}

abstract class InteractionInitiator {
  .. Methods ..
-OnCollisionEnter(): void { Collider other }

}

abstract class Capturable {
  .. Fields ..
- InCapture: bool { get; private set; }
  .. Methods ..
#OnCaptureStart(): virtual void {}
+CaptureUpdate(): abstract void {}
#OnCaptureEnd(): virtual void {}
}

interface IInteractable {
  .. Fields ..
- HasCooldown: bool
- OnCooldown: bool { get; private set; }
- CooldownTime: float { get; private set; }
  .. Methods ..
-OnInteract(): void { InterationInitiator intiator }

}

class Frog {
  .. Fields ..
- JumpForce: float
  .. Methods ..
-Update(): void { }

}

'RELATIONS
InteractionInitiator <|-up- Cappy: Extends
InteractionInitiator <|-up- Mario: ExtendsScratch area...
Cappy <-left- Mario: Calls Throw function on user request
IInteractable <-left- InteractionInitiator: OnCollision With Calls OnInteract(this);
Capturable <|-up- Frog: Extends
IInteractable <|-up- Capturable: Implements


@enduml